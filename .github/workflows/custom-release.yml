name: Custom Release

on:
    workflow_dispatch:
        inputs:
            package_name:
                description: 'Package name'
                required: true

concurrency:
    group: branch-release

jobs:
    publish:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/release'
        steps:
            - name: Generate Token
              id: generate_token
              uses: tibdex/github-app-token@v1
              with:
                  app_id: ${{ vars.TOKEN_APP_ID }}
                  private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}
            - uses: actions/checkout@v3
              with:
                  token: ${{ steps.generate_token.outputs.token }}
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: Setup
              run: yarn workspace @evoke-platform/${{ github.event.inputs.package_name }} install
            - name: Build
              run: yarn workspace @evoke-platform/${{ github.event.inputs.package_name }} build
            - name: Publish
              run: |
                  git config user.name "GitHub Actions Bot"
                  git config user.email "<>"
                  mv npmrc-ci .npmrc
                  npx turbo run release --force --filter=@evoke-platform/${{ github.event.inputs.package_name }} --concurrency 1 --
                  npx turbo run deploy --force --filter=@evoke-platform/${{ github.event.inputs.package_name }} --
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Push Changes
              run: |
                  git fetch origin
                  git merge -m "Merge branch 'release' [skip ci]" origin/release
                  git push --follow-tags
